分布式长连接聊天室
作者: roy@rootk.com
2013/03/09


%!target: html
%!options: --toc --toc-level 3
%!encoding: utf-8
%!style: ../static/fancy.css


+ 项目介绍 +
+ 分布式架构，多个节点负载均衡
+ AJAX长连接，用户浏览器可实时得到消息
+ 为在节点间实时传递用户状态，节点间UDP多播通讯
+ UDP多播使用Tornado的IOLOOP事件循环管理
+ 使用Redis保存用户的消息缓存和全局信息
+ 使用Tornado作为WEB服务器，支持同步和异步调用
+ 最前端使用NGINX做多个服务器的HTTP负载均衡，使用keepalive机制和后端Tornado服务器连接


+ 结构图 +
++ 物理结构 ++
[/static/images/multiuser_chat/multiuser_chat.jpeg]


++ 逻辑模块 ++
[/static/images/multiuser_chat/multiuser_chat_detail.jpeg]


+ 结构说明 +
++ WEB接口 ++
+ /api/new_message作为用户发送新消息的接口，同步的POST方法
+ /api/pool_message，长连接API，异步POST方法。作为和服务器通讯的主要接口
+ 维护和释放本地进程的长连接
+ 用户登入和登出的动作处理：通过异步连接通知本进程内的用户，并使用多播通知其他服务器
+ 客户端浏览器关闭、刷新、或同一个用户多处登录处理
+ 提供查看整个服务器内部状态的接口，方便管理


++ 进程内存 ++
+ 长连接对象为python对象，在服务器生命周期内必须保存在内存中
+ 由于长连接对象保存在本地，作为将用户和长连接绑定的机制，一部分用户信息也保存在本地进程中
+ 每个服务器进程中还有房间信息，这些房间保存了用户和长连接对象


++ UDP多播 ++
+ 由于需要实时的通知本服务器进程内用户/房间的变化，必须使用一种实时高效的机制通知其他服务器
+ 需要通知其他服务器的消息有，广播消息、普通聊天消息（当用户不在本地进程时）、私聊消息、用户上线下线通知、命令广播（创建/删除房间等）


++ Redis ++
+ 基于内存的noSQL服务器，Redis保存了聊天消息缓存
+ 由于本地进程只保存了非常有限的用户信息，用户的详细信息也保存在Redis中
+ 房间列表（包括房间内的用户）同样保存在Redis中
+ 将这些数据保存在Redis中的原因是，在分布式架构中方便任意服务器访问/修改


+ 功能截图 +
++ 主界面 ++
[/static/images/multiuser_chat/main.jpg]


++ 大厅 ++
[/static/images/multiuser_chat/lobby.jpg]


++ 聊天房间 ++
[/static/images/multiuser_chat/chatroom.jpg]


+ 目前应用 +
[http://chat.rootk.com http://chat.rootk.com]


